swagger: "2.0"
info:
  description: "Customer registration service"
  version: "1.0.0"
  title: "Customer service"
host: "localhost:8080"
basePath: "/v1/api"
schemes:
- "http"
paths:
  /customer:
    post:
      tags:
      - "Customer"
      summary: "Add new Customer"
      description: "New Customer Registration"
      operationId: "addCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Transaction-Id"
        type: "string"
        description: "customer service transaction id"
      - in: "header"  
        name: "Activity-Id"
        type: "string"   
        description: "customer service activity id"
      - in: "body"
        name: "customer"
        description: "Customer object"
        required: true
        schema:
          $ref: "#/definitions/CustomerRequest"

      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CustomerResponse"
        "400":  
          description: "Failure"
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - oauth2Password:
        - "write:customer"
        - "read:customer"
securityDefinitions:
  oauth2Password:
    type: "oauth2"
    tokenUrl: "http://localhost:8080/oauth/token"
    flow: password
    scopes:
      write:customer: "add new customer in your account"
      read:customer: "read customer details"
definitions:
  CustomerRequest:
    type: "object"
    required:
    - "customerNumber"
    - "firstName"
    - "lastName"
    - "birthdate"
    - "country"
    - "countryCode"
    - "mobileNumber"
    - "email"
    - "customerStatus"
    - "address"
    properties:
      customerNumber:
        type: "string"
        pattern: ^(?=.*[A-Z])(?=.*[0-9])[A-Z0-9]+$
        maxLength: 10
      firstName :
        type: "string"
        minLength: 10
        maxLength: 50
      lastName :
        type: "string"
        minLength: 10
        maxLength: 50        
      birthdate :
        type: "string"
        pattern: "DD-MM-YYYY"
      country :
        type: "string" 
      countryCode :
        type: "string" 
        maxLength: 2
      mobileNumber :
        type: "number"
        maxLength: 10
      email :
        type: "string" 
        format: "email" 
      customerStatus :
        type: "string"
        description: "required, enum values (O-Open , C-Close , S-Suspended , R-Restored)"
        enum:
        - "O"
        - "C"
        - "S"
        - "R"
      address :
        $ref: "#/definitions/Address"        
  Address:
    type: "object"
    required:
    - "addressLine1"
    - "postalCode"
    properties:
      addressLine1:
        type: "string"
        maxLength: 50
      addressLine2:
        type: "string"
      street :
        type: "string"
      postalCode :
        type: "string"
        maxLength: 5
  CustomerResponse:
    type: "object"
    required:
    - "status"
    - "message"
    properties:
      status:
        type: "string"
      message:
        type: "string"
  ErrorResponse:
    type: "object"
    required:
    - "status"
    - "message"    
    properties:
      status:
        type: "string"
      message:
        type: "string" 
      errorType :
        type: "string"
